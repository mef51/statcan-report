#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass report
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman palatino
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing other 1.5
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.54cm
\topmargin 2.54cm
\rightmargin 2.54cm
\bottommargin 2.54cm
\headheight 0cm
\headsep 0cm
\footskip 0cm
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Work Term Report
\end_layout

\begin_layout Author
Mohammed A.
 Chamma
\end_layout

\begin_layout Section*
Introduction
\end_layout

\begin_layout Standard
My name is Mohammed.
 I'm a third-year student in Physics-Mathematics.
 For my first coop work term I was part of the Modeling Division at Statistics
 Canada in Tunney's Pasture, Ottawa.
 This report is a description of my time there, the environment I was a
 part of, and the projects I was involved in.
 
\end_layout

\begin_layout Standard
The Modeling Division is responsible for creating mathematical and computer
 simulation models of Canadian citizens.
 We use real statistical data collected by StatCan to make these models
 representative of real society.
 I worked on a model called LifePaths, which is categorized as a 
\emph on
microsimulation
\emph default
 model.
 LifePaths is a computer program that aims to simulate many aspects of Canadian
 society, including education, fertility, mortality, wages, taxes and many
 more.
 When you start LifePaths, you specify the size of the population you want
 to simulate, and you have the option of changing some parameters, for example,
 life expectancy.
 When you start the simulation, LifePaths creates a virtual Canadian and
 starts simulating this virtual Canadian's life, including basic details
 like gender and province of residence, and more complicated details like
 whether or not this person finished highschool, how many children they
 have, and so on.
 LifePaths simulates this person's entire life and when that virtual Canadian
 dies, it simulates the next Canadian's life, until it reaches the population
 you chose at the beginning.
 These virtual Canadian's are statistically similar to real Canadians.
 When LifePaths decides, for example, what program of study a person enters,
 it knows what the statistical distribution of programs of study of real
 Canadians are, and draws from this distribution.
 Though none of the simulated Canadians in LifePaths exist in reality, the
 entire population of virtual Canadians are statistically very similar to
 the actual population.
 When the LifePaths model finishes simulating a population, it surveys the
 virtual population and outputs tables specified by a researcher.
 These tables can be compared with real data, and in this way we can validate
 whether the virtual population matches the real population.
 
\end_layout

\begin_layout Standard
Why would you want to be able to create a virtual population that somehow
 matches the real population? Having a virtual population lets you make
 a change and observe the impact on the population, without harming anyone
 or wasting lots of money.
 LifePaths is programmed with a set of 
\emph on
parameters.

\emph default
 These parameters form a 
\emph on
scenario
\emph default
.
 The parameters encompass a multitude of things, like migration rates into
 and out of the country, average wages for different jobs, fertility rates,
 probabilities of becoming disabled, the percentage of taxes one owes, and
 so on.
 By changing these parameters we can create new scenarios, run the simulation,
 and observe the impact on the population.
 How would populations distributions change if the migration rate were to
 increase by so-and-so amount? Who would benefit the most if we cut taxes?
 LifePaths is a tool that lets you pose these questions and attempt to answer
 them with statistical arguments.
\end_layout

\begin_layout Standard
I was located on the 24th floor of the 26-story R.H.
 Coats building at Tunney's Pasture.
 The Modeling Division I was a part of is made up of about ten people, and
 included PhD's, researchers, and another coop student (also from uOttawa).
 We each had our own cubicle with high walls and a work computer.
 None of the regular work computers are connected to the internet --occasionally
 we had access to confidential data and having these computers connected
 to the internet is considered a security risk.
 Each floor has a set of shared computers (one or two at each corner of
 the floor) that are connected to the internet and can be used for browsing.
\end_layout

\begin_layout Standard
The LifePaths model was programmed in a language called Modgen.
 Modgen was developped a few years ago by Statistics Canada and is used
 (as the name suggests) to generate socio-economic models.
 Modgen is a language that compiles to the more standard C++ programming
 language, used worldwide in all sorts of software.
 The benefit of Modgen is that it is simpler to write than C++.
 Modgen introduces many constructs and general ideas that are useful in
 creating simulation models that C++ doesn't have, making it easier for
 modelers and statisticians to focus solely on their model, rather than
 the underlying technical details.
 Since Modgen code compiles into C++, we can retain the performance and
 speed that C++ offers.
 This is important as large simulations can take a very long time.
\end_layout

\begin_layout Standard
During my work term, the team was hired by Health Canada for a project with
 LifePaths.
 Health Canada wanted to understand the costs of paying for different types
 of homecare for seniors, in the future.
 LifePaths can simulate people's lives in the future based on population
 projections and so create a projection of what the costs would be.
 Health Canada also asked the Modeling Division to investigate different
 scenarios: what would it be like if the government paid for 100% of the
 costs? What would it be like if the government paid for 80% of the costs
 and seniors the rest? LifePaths also allowed us to investigate how many
 people would even be able to pay for their care if they were required to.
 
\end_layout

\begin_layout Standard
The Health Canada project involved programming new modules into the simulation
 to simulate the different types of homecare a person could receive, and
 assigning homecare to people with a set probability.
 To get these probabilities (so that they reflected reality) we analysed
 the data in the National Population Health Survey (NPHS), which asks respondent
s, amongst other things, if they received homecare and what kind of homecare
 they received.
\end_layout

\begin_layout Standard
While most of the team was kept busy with the Health Canada project, there
 was also a project to renew and create a new release version of LifePaths.
 LifePaths was in a state where there were hundreds of tables that few understoo
d, modules that were never used, and multiple different versions as people
 added their own features and then never merged them all together again.
 I was given the task of merging the different versions together and to
 create a clean, releasable version of LifePaths.
 This clean version of LifePaths would also serve as a starting point for
 future LifePaths projects.
\end_layout

\begin_layout Subsection*
Tasks Completed
\end_layout

\begin_layout Standard
While I was at StatCan I worked on the following things:
\end_layout

\begin_layout Itemize
Created a prototype version of the HomeCare simulation module.
\end_layout

\begin_layout Itemize
Introduced and used source control software to carry out the merge and track
 changes.
 This let me build a history of changes made that served as documentation.
\end_layout

\begin_layout Itemize
Presented about the source control software I used (called 'git') to the
 team.
 I explained a bit about how it worked, how to use it, and how I was using
 it for LifePaths.
\end_layout

\begin_layout Itemize
Validated that my merged version of LifePaths still behaved as expected
 by comparing it's output with previous versions of LifePaths and with real
 statistical data.
 This involved a suite of graphs that plotted various statistics.
 These statistics included population by province, unemployment rate since
 1971, earnings by province, births by year, and many more.
 
\end_layout

\begin_layout Subsection*
Microsimulation and LifePaths
\end_layout

\begin_layout Standard
LifePaths is referred to as a 
\emph on
microsimulation
\emph default
 model.
 The 
\emph on
micro
\emph default
 in 
\emph on
microsimulation
\emph default
 refers to the fact that the simulation models the behaviour of single individua
ls, as opposed to modelling aggregate (or macro) statistics.
 For example, one can collect data on a population's size every year, and
 then construct a model (or function) that fits the data.
 This function however does not give you any information about the individual
 units of the population, for example the birth and death year of each person
 in the population.
 In this example the macro data is the size of the population and the micro
 data is the birth and death year of each person.
 Microsimulation (LifePaths specifically) tries to recreate the macrodata
 (population size) by simulating the microdata (birth and death years) of
 individuals.
 When a simulation is complete LifePaths aggregates the data (in effect
 conducting a survey) of the simulated individuals and outputs statistics
 that can be compared with real statistics.
 
\end_layout

\begin_layout Standard
A consequence of microsimulation is that it is possible to examine in details
 the lives of each simulated individual.
 Included with Modgen is a tool called the BioBrowser.
 BioBrowser graphically displays how a person's traits change in time.
 For example, we can use BioBrowser to see a person's disability state (no
 disability, light disability, severe disability) throughout their life.
 This lets us verify that the lives of the people we're simulating make
 sense in reality.
 
\end_layout

\begin_layout Standard
Microsimulation is a relatively new field.
 It was first proposed by an Englishman named Guy Orcutt in 1957 in a paper
 titled 
\begin_inset Quotes eld
\end_inset

A new type of socio-economic system
\begin_inset Quotes erd
\end_inset

.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Orcutt G (1957) 'A new type of socio-economic system', 
\emph on
Review of Economics and Statistics, 
\emph default
39(2), 116-132.
\end_layout

\end_inset

 Over time more and more statistical agencies have started their own microsimula
tion models to address a whole host of issues.
 Other than LifePaths, Statistics Canada has microsimulation models for
 the tax and transfers system, health care analysis, and population projections.
\end_layout

\begin_layout Subsection*
The Modgen Programming Language
\end_layout

\begin_layout Standard
The LifePaths model is written in the Modgen language.
 Modgen allows you to use language constructs that are tailored for writing
 socio-economic models.
 It also abstracts away some lower-level details of how the simulation runs
 and creates an executable file with it's own visual interface for running
 the simulation model.
 This allows statisticians to develop the model without the need of a programmer
 and lets the developer focus on the model itself.
 
\end_layout

\end_body
\end_document
